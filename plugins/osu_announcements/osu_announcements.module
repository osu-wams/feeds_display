<?php
/**
 * @file osu_announcements.module
 *  Provides a custom parser for the Live Feeds module
 *  to parse RSS from the OSU Announcements module
 */


 /**
  * @returns
  *   A configuration array for this parser
  */
 function osu_announcements_config() {
   $feed_config = array(
    'feed_type'  => 'osu_announcements',
    'feed_title' => 'OSU Announcements',
    'feed_url'   => 'http://oregonstate.edu/cws/announcement/rss.xml',
  );
  return $feed_config;
}


 /**
 * Parse the RSS and display the feed
 *
 * @param $feed_url
 *  A string containing he URL of the feed
 * @param $num_items
 *  An integer containing the number of items to display
 *
 * @return
 *  A string with the formated HTML to display
 */
function osu_announcements_live_feeds_parser($feed_url, $num_items) {
  // Use cURL to get the file
  $proxy = 'proxy.oregonstate.edu:3128';
  $ch = curl_init();
  $timeout = 0;
  curl_setopt ($ch, CURLOPT_URL, $feed_url);
  curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
  curl_setopt($ch, CURLOPT_PROXY, $proxy);
  $file_contents = curl_exec($ch);
  curl_close($ch);
  $xml = simplexml_load_string($file_contents);
  $items = 0;
  $content = '';

  foreach ($xml->channel->item as $item) {
    if (++$items > $num_items) break;

    $date = date('M j, Y', strtotime($item->pubDate));
    $body = live_feeds_truncate_words($item->description, 25);

    $tidy = new tidy();
    $body = $tidy->repairString($body, array('show-body-only' => 1));

    $content .=  '<div class="news-item">';
    $content .= '<h3 class="title"><a href="' . $item->link . '">' . $item->title . '</a></h3> - ';
    $content .= '<div class="date">'  . $date . '</div>';
    $content .= '<div class="news-body">' . $body . '&hellip; <a href="' . $item->link . '">&nbsp;Read full story.</a></div>';
    $content .= '</div>';
  }
  return $content;
}
